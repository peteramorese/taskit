<?xml version="1.0" ?>
<launch>


  <!-- Plan in open loop or closed loop (recieving Vicon Data) -->
  <arg name="open_loop" default="true" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />
  <arg name="pipeline" default="ompl" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="rviz_tutorial" default="false" />
  <arg name="use_gui" default="false" />

  <!--
  Load the URDF, SRDF and other .yaml configuration files on the param server-->
  <include file="$(find manipulation_interface)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="load_gripper" value="true"/>
  </include>


  <!-- If needed, broadcast static tf for robot root
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0.98 0.058 0.31 -2.24 -.3 2.66 2.32 panda_link0" />
  -->



  <!-- We do not have a robot connected, so publish fake joint states-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="$(arg use_gui)"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />




  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"  />
  </include>

  <!-- Load the planning environment and locations -->
  <include file="$(find manipulation_interface)/launch/load_parameters.launch"/>

  <node name="manipulator_node" pkg="manipulation_interface" type="manipulator_node" respawn="false" output="screen">
    <rosparam command="load" file="$(find panda_moveit_config)/config/kinematics.yaml"/>
    <param name="/planning_plugin" value="ompl_interface/OMPLPlanner"/>
    <rosparam command="load" file="$(find panda_moveit_config)/config/ompl_planning.yaml"/>
    <param name="sim_only" value="true"/>
    <param name="mock_observer" value="false"/>
  </node>

  <!-- Run Rviz -->
  <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_tutorial" value="$(arg rviz_tutorial)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Start the VRPN client to retieve Vicon Tracker data-->
  <include file="$(find manipulation_interface)/launch/vicon_franka_vrpn.launch"/>

  <!-- Run action primitive node handling action primitives in open loop case -->
  <group if="$(arg open_loop)">
    <node name="action_primitive_node" pkg="manipulation_interface" type="action_primitive_node" respawn="false" output="screen" />
  </group>

  <!-- Run com node for handling action primitives in closed loop case -->
  <group unless="$(arg open_loop)">
    <node name="com_node" pkg="manipulation_interface" type="com_node" respawn="false" output="screen" />
  </group>

  <!-- Run preference planner -->
  <node name="ordered_planner_node" pkg="manipulation_interface" type="ordered_planner_node" respawn="false" output="screen" />

  <!-- Start the pipeline -->
  <node name="pipeline_trigger_node" pkg="manipulation_interface" type="pipeline_trigger_node" respawn="false" output="screen">
    <param name="discrete_environment/open_loop" value="$(arg open_loop)"/>
  </node>

</launch>
