<?xml version="1.0" ?>
<launch>

  <!-- Specify the robot IP, default is the Franka robot in ARIA lab -->
  <arg name="robot_ip" default="franka-aria.colorado.edu" />

  <include file="$(find franka_control)/launch/franka_control.launch">
	  <arg name="robot_ip" value="$(arg robot_ip)" />
	  <arg name="load_gripper" value="true" />
  </include>
  <include file="$(find vicon_franka_integration)/launch/panda_moveit.launch">
    <arg name="load_gripper" value="true" />
  </include>


  <!-- Launch the vrpn node -->
  <include file="$(find vrpn_client_ros)/launch/vicon_franka_vrpn.launch"/>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find panda_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />
  <arg name="pipeline" default="ompl" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="rviz_tutorial" default="false" />
  <arg name="use_gui" default="false" />

  <!--
  Load the URDF, SRDF and other .yaml configuration files on the param server
  <include file="$(find panda_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>
  -->

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_1" args="0 0 0 0 0 0 world panda_link0" />




  <!-- We do not have a robot connected, so publish fake joint states
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="$(arg use_gui)"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  -->



  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default)
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"  />
  </include>
  -->

  <node name="manipulator_node" pkg="vicon_franka_integration" type="manipulator_node" respawn="false" output="screen">
    <rosparam command="load" file="$(find panda_moveit_config)/config/kinematics.yaml"/>
    <param name="/planning_plugin" value="ompl_interface/OMPLPlanner"/>
    <rosparam command="load" file="$(find panda_moveit_config)/config/ompl_planning.yaml"/>
    <param name="sim_only" value="false"/>
  </node>


  <!-- Run Rviz -->
  <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch">
    <arg name="rviz_tutorial" value="$(arg rviz_tutorial)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

</launch>
